<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;


/**
 * Implements hook_form_alter().
*/

function save_chosen_order_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  //|    Add some js to make multi-select chosen field sortable
  //|    Add a hidden field to store the sort order
  if (!empty($form_state->getValue('#chosen_order') && !$form_state->getValue('submitted'))) {
     foreach (Element::children($form) as $key) {
      $field = &$form[$key];
      if (isset($field['widget']['#field_name']) && !empty($field['widget']['#chosen']) && $field['widget']['#multiple']) {
        $form[$key . '_order'] = array(
          '#type' => 'hidden',
          '#attributes' => [
            'class' => [
              'field-type-chosen-order',
            ],
            'id' => 'edit_' . $key . '_chosen_order',
          ],
        );
        if (!empty($field['widget']['#default_value']) && is_array($field['widget']['#default_value'])) {
          $form[$key . '_order']['#default_value'] = implode(',', $field['widget']['#default_value']);
        }
      }
    }
  }

}  

/**
 * Implements hook_field_widget_form_alter().
 */
function save_chosen_order_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {

  if (!empty($element['#chosen']) && $element['#multiple']) {
    //|  Add sort js to all chosen multiple select widgets
    $element['#attached']['library'][] = 'save_chosen_order/drupal.chosen_order';
    //|  Add sort js to all chosen multiple select widgets
    $element['#element_validate'][] =  'save_chosen_order_form_chosen_field_validate_order';
    $form_state->setValue('#chosen_order', TRUE);
  }
}

function save_chosen_order_form_chosen_field_validate_order($element, FormStateInterface $form_state, $form) {
  $el_name = $element['#field_name'];
  $order_field_name = $el_name . '_order';

  $ordered_field_name = $form_state->getValue($order_field_name);

  if (isset($ordered_field_name)) {
    //|  Get values and put in correctly formatted array
    $values = explode(',',$ordered_field_name);

    if (!empty($values) && is_array($values)) {
    // |  Set value
     $items = [];
     foreach ($values as $value) {
      $items[] = [$element['#key_column'] => $value];
    }
        $form_state->setValueForElement($element, $items);
     
    }
  }  
}